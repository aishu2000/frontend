# Workflow name
name: Frontend Continuous Deployment

# Triggers for the workflow
on:
  # Manual trigger using the workflow_dispatch event
  workflow_dispatch:

  # Automatic trigger on pull request mege events targeting the main branch
  pull_request:
    types:
    - closed
    branches:
    - main

# Jobs defined in the workflow
jobs:
  lint:
    # The operating system for the runner
    runs-on: ubuntu-latest

    # Steps in the job
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: latest
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run Lint
        run: npm run lint

      - name: Print a message
        run: echo "Lint successful"

  test:
    # The operating system for the runner
    runs-on: ubuntu-latest

    # Steps in the job
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: latest
          cache: 'npm'

      - name: nstall dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Print a message
        run: echo "Test successful"

  deploy:
    needs: [lint, test]
    # The operating system for the runner
    runs-on: ubuntu-latest

    # Steps in the job
    steps:

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: "us-east-1"

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: frontend
          IMAGE_TAG: ${{ github.sha }}
          URL: ${{ vars.REACT_APP_MOVIE_API_URL }}
        run: |
          docker build --build-arg=REACT_APP_MOVIE_API_URL=$URL -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: Set up kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'v1.26.15'
    
      - name: Deploy
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: frontend
        run: |
          cd k8s
          echo "${{secrets.KUBECONFIG}}" > kubeconfig.yaml
          kustomize edit set image frontend=$REGISTRY/$REPOSITORY:$IMAGE_TAG
          kustomize build | kubectl apply --kubeconfig=kubeconfig.yaml -f -
